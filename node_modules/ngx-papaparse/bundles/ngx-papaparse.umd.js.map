{"version":3,"file":"ngx-papaparse.umd.js.map","sources":["ng://ngx-papaparse/lib/papa.ts","ng://ngx-papaparse/lib/papa-parse.module.ts"],"sourcesContent":["import {Inject, Injectable, Optional} from '@angular/core';\nimport {PapaParseGlobalConfig} from './interfaces/papa-parse-global-config';\nimport {PapaParseResult} from './interfaces/papa-parse-result';\nimport {PapaParseConfig} from './interfaces/papa-parse-config';\nimport {PapaUnparseConfig} from './interfaces/papa-unparse-config';\nimport * as lib from 'papaparse/papaparse.min.js';\n\n@Injectable()\nexport class Papa {\n    public _papa = lib;\n\n    constructor(@Optional() @Inject('PapaParseGlobalConfig') private config?: PapaParseGlobalConfig\n    ) {\n        if (!this.config) {\n            this.config = {};\n        }\n    }\n\n    /**\n     * Parse CSV to an array\n     */\n    public parse(csv: string|File, config?: PapaParseConfig): PapaParseResult {\n        if (config) {\n            if (config.worker === true) {\n                if (this.config.scriptPath) {\n                    this._papa.SCRIPT_PATH = this.config.scriptPath;\n                } else {\n                    throw new Error('When using workers, the workerScriptPath must be defined in global' +\n                        ' papaparse configuration. See' +\n                        ' https://alberthaff.dk/projects/ngx-papaparse/docs/v3/parsing-csv/using-serviceworkers' +\n                        ' for more information.');\n                }\n            }\n        }\n\n        return this._papa.parse(csv, config);\n    }\n\n    /**\n     * Convert an array into CSV\n     */\n    public unparse(data, config?: PapaUnparseConfig): string {\n        return this._papa.unparse(data, config);\n    }\n\n    /**\n     * Set the size in bytes of each file chunk.\n     * Used when streaming files obtained from the DOM that\n     * exist on the local computer. Default 10 MB.\n     */\n    public setLocalChunkSize(value: number): void {\n        this._papa.LocalChunkSize = value;\n    }\n\n    /**\n     * Set the size in bytes of each remote file chunk.\n     * Used when streaming remote files. Default 5 MB.\n     */\n    public setRemoteChunkSize(value: number): void {\n        this._papa.RemoteChunkSize = value;\n    }\n\n    /**\n     * Set the delimiter used when it is left unspecified and cannot be detected automatically. Default is comma.\n     */\n    public setDefaultDelimiter(value: string): void {\n        this._papa.DefaultDelimiter = value;\n    }\n\n    /**\n     * An array of characters that are not allowed as delimiters.\n     */\n    get badDelimiters() {\n        return this._papa.BAD_DELIMITERS;\n    }\n\n    /**\n     * The true delimiter. Invisible. ASCII code 30.\n     * Should be doing the job we strangely rely upon commas and tabs for.\n     */\n    get recordSeperator() {\n        return this._papa.RECORD_SEP;\n    }\n\n    /**\n     * Also sometimes used as a delimiting character. ASCII code 31.\n     */\n    get unitSeperator() {\n        return this._papa.UNIT_SEP;\n    }\n\n    /**\n     * Whether or not the browser supports HTML5 Web Workers.\n     * If false, worker: true will have no effect.\n     */\n    get workersSupported(): boolean {\n        return this._papa.WORKERS_SUPPORTED;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport {Papa} from './papa';\n\n@NgModule({\n    imports: [],\n    providers: [\n        Papa\n    ]\n})\nexport class PapaParseModule { }\n"],"names":["Injectable","Optional","Inject","NgModule"],"mappings":";;;;;;;;;;AAAA;QAWI,cAAiE,MAA8B;YAA9B,WAAM,GAAN,MAAM,CAAwB;yBAFhF,GAAG;YAId,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBACd,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;aACpB;SACJ;;;;;;;QAKM,oBAAK;;;;;;sBAAC,GAAgB,EAAE,MAAwB;gBACnD,IAAI,MAAM,EAAE;oBACR,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,EAAE;wBACxB,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;4BACxB,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;yBACnD;6BAAM;4BACH,MAAM,IAAI,KAAK,CAAC,oEAAoE;gCAChF,+BAA+B;gCAC/B,wFAAwF;gCACxF,wBAAwB,CAAC,CAAC;yBACjC;qBACJ;iBACJ;gBAED,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;;;;;;;;QAMlC,sBAAO;;;;;;sBAAC,IAAI,EAAE,MAA0B;gBAC3C,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;;;;;;;;;QAQrC,gCAAiB;;;;;;;sBAAC,KAAa;gBAClC,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC;;;;;;;;QAO/B,iCAAkB;;;;;;sBAAC,KAAa;gBACnC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC;;;;;;;QAMhC,kCAAmB;;;;;sBAAC,KAAa;gBACpC,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC;;QAMxC,sBAAI,+BAAa;;;;;;;gBAAjB;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;aACpC;;;WAAA;QAMD,sBAAI,iCAAe;;;;;;;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;aAChC;;;WAAA;QAKD,sBAAI,+BAAa;;;;;;;gBAAjB;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aAC9B;;;WAAA;QAMD,sBAAI,kCAAgB;;;;;;;;;gBAApB;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;aACvC;;;WAAA;;oBA1FJA,eAAU;;;;;wDAIMC,aAAQ,YAAIC,WAAM,SAAC,uBAAuB;;;mBAX3D;;;;;;;ACAA;;;;oBAGCC,aAAQ,SAAC;wBACN,OAAO,EAAE,EAAE;wBACX,SAAS,EAAE;4BACP,IAAI;yBACP;qBACJ;;8BARD;;;;;;;;;;;;;;;;;;;;;;;;"}
