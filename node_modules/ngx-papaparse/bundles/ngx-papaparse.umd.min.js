!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("papaparse/papaparse.min.js")):"function"==typeof define&&define.amd?define("ngx-papaparse",["exports","@angular/core","papaparse/papaparse.min.js"],t):t(e["ngx-papaparse"]={},e.ng.core,null)}(this,function(e,t,r){"use strict";var p=function(){function e(e){this.config=e,this._papa=r,this.config||(this.config={})}return e.prototype.parse=function(e,t){if(t&&!0===t.worker){if(!this.config.scriptPath)throw new Error("When using workers, the workerScriptPath must be defined in global papaparse configuration. See https://alberthaff.dk/projects/ngx-papaparse/docs/v3/parsing-csv/using-serviceworkers for more information.");this._papa.SCRIPT_PATH=this.config.scriptPath}return this._papa.parse(e,t)},e.prototype.unparse=function(e,t){return this._papa.unparse(e,t)},e.prototype.setLocalChunkSize=function(e){this._papa.LocalChunkSize=e},e.prototype.setRemoteChunkSize=function(e){this._papa.RemoteChunkSize=e},e.prototype.setDefaultDelimiter=function(e){this._papa.DefaultDelimiter=e},Object.defineProperty(e.prototype,"badDelimiters",{get:function(){return this._papa.BAD_DELIMITERS},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"recordSeperator",{get:function(){return this._papa.RECORD_SEP},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"unitSeperator",{get:function(){return this._papa.UNIT_SEP},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"workersSupported",{get:function(){return this._papa.WORKERS_SUPPORTED},enumerable:!0,configurable:!0}),e.decorators=[{type:t.Injectable}],e.ctorParameters=function(){return[{type:undefined,decorators:[{type:t.Optional},{type:t.Inject,args:["PapaParseGlobalConfig"]}]}]},e}(),a=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[],providers:[p]}]}],e}();e.Papa=p,e.PapaParseModule=a,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-papaparse.umd.min.js.map